/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista;

import Controlador.ButacaData;
import Controlador.SalaData;
import Modelo.Butaca;
import Modelo.Sala;
import java.awt.Color;
import java.awt.Font;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JSpinner;
import javax.swing.ListSelectionModel;
import javax.swing.SpinnerNumberModel;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;

/**
 *
 * @author Familia
 */
public class Pagina5 extends javax.swing.JPanel {

    /**
     * Creates new form Pagina1
     */
    private DefaultTableModel modelo;
    private JTableHeader th;
    private SpinnerNumberModel modelfila;
    private SpinnerNumberModel modelcolumna;

    private ButacaData bd;
    private SalaData sd;

    private Sala sala;

    public Pagina5() {
        initComponents();

        this.modelo = new DefaultTableModel();
        personalizarTabla();

        this.modelfila = new SpinnerNumberModel();

        this.modelcolumna = new SpinnerNumberModel();

        this.bd = new ButacaData();
        this.sd = new SalaData();

        CargarComboSala();

        jbActualizar.setEnabled(false);
        jbActualizar.setBackground(new Color(117, 21, 41));
        UIManager.put("Button.disabledText", Color.BLACK);

        validarSpinner();

        jcbEstado.setEnabled(false);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    private void armarCabecera() {
        List<Object> columnas = new ArrayList<>();

        columnas.add("Fila");
        columnas.add("Columna");
        columnas.add("Estado");

        for (Object x : columnas) {

            modelo.addColumn(x);

        }

        jtButaca.setModel(modelo);
    }

    private void personalizarTabla() {

        armarCabecera();
        th = jtButaca.getTableHeader();
        Font fuente = new Font("Times New Roman", 0, 20);
        th.setFont(fuente);
        th.setBackground(new Color(249, 193, 205));
        jtButaca.setFont(new Font("Times New Roman", 0, 20));
        jtButaca.setRowHeight(30);
        jtButaca.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

    }

    private void borrarFilas() {

        int a = modelo.getRowCount() - 1;

        for (int i = a; i >= 0; i--) {
            modelo.removeRow(i);
        }
    }

    private void CargarComboSala() {

        for (Sala x : sd.obtenerSalas()) {

            jcbSala.addItem(x);
        }
    }

    private void cargarTabla() {

        boolean validar = false;

        sala = (Sala) jcbSala.getSelectedItem();

        if (bd.obtenerButacasXSala(sala.getIdSala()).isEmpty()) {
            JOptionPane.showMessageDialog(this, "Butacas inexistente");
        } else {

            for (Butaca x : bd.obtenerButacasXSala(sala.getIdSala())) {

                modelo.addRow(new Object[]{x.getFila(), x.getColumna(), x.isEstado()});
                validar = true;
            }
        }
    }

    private void limpiarCampos() {
        jsFila.setValue(0);
        jsColumna.setValue(0);
        jcbSala.setSelectedIndex(0);
    }

    private void validarSpinner() {

        modelfila.setMaximum(6);
        modelfila.setMinimum(0);

        modelcolumna.setMaximum(10);
        modelcolumna.setMinimum(0);

        jsFila.setModel(modelfila);
        jsColumna.setModel(modelcolumna);

        jsFila.setEditor(new JSpinner.DefaultEditor(jsFila));
        jsColumna.setEditor(new JSpinner.DefaultEditor(jsColumna));

    }

    private void cargarDatosAlActualizar() {

        int filaElegida = jtButaca.getSelectedRow();

        if (filaElegida != -1) {

            //recupero datos de l tabla
            int fila = Integer.parseInt(jtButaca.getValueAt(filaElegida, 0).toString());
            int columna = Integer.parseInt(jtButaca.getValueAt(filaElegida, 1).toString());
            boolean estado = Boolean.parseBoolean(jtButaca.getValueAt(filaElegida, 2).toString());

            jsFila.setValue(fila);
            jsColumna.setValue(columna);
            jcbEstado.setSelected(estado);
        } else {

            JOptionPane.showMessageDialog(this, "Seleccione un registro");
        }

    }

    private void cambiarPropiedadesElementosActualizar() {
        jbActualizar.setEnabled(true);
        jbGuardar.setEnabled(false);
        jcbEstado.setEnabled(true);
        jbGuardar.setBackground(new Color(117, 21, 41));
        jbActualizar.setBackground(new Color(235, 42, 83));
        UIManager.put("Button.disabledText", Color.BLACK);
    }

    private void cambiarPropiedadesElementosLimpiar() {

        jbActualizar.setEnabled(false);
        UIManager.put("Button.disabledText", Color.BLACK);
        jbActualizar.setBackground(new Color(117, 21, 41));
        jbGuardar.setEnabled(true);
        jcbEstado.setEnabled(false);
        jcbEstado.setSelected(true);
        jbGuardar.setBackground(new Color(235, 42, 83));
    }

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jpBackgroud = new javax.swing.JPanel();
        jpContenedor = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jbGuardar = new javax.swing.JButton();
        jbActualizar = new javax.swing.JButton();
        jbLimpiar = new javax.swing.JButton();
        jbSalir = new javax.swing.JButton();
        jcbSala = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        jsFila = new javax.swing.JSpinner();
        jLabel9 = new javax.swing.JLabel();
        jsColumna = new javax.swing.JSpinner();
        jLabel4 = new javax.swing.JLabel();
        jcbEstado = new javax.swing.JCheckBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtButaca = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        jpBackgroud.setBackground(new java.awt.Color(32, 30, 45));
        jpBackgroud.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jpContenedor.setBackground(new java.awt.Color(32, 30, 45));
        jpContenedor.setPreferredSize(new java.awt.Dimension(1000, 530));

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 36)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Control Butaca");

        jbGuardar.setBackground(new java.awt.Color(235, 42, 83));
        jbGuardar.setFont(new java.awt.Font("Times New Roman", 0, 20)); // NOI18N
        jbGuardar.setForeground(new java.awt.Color(255, 255, 255));
        jbGuardar.setText("Guardar");
        jbGuardar.setBorder(null);
        jbGuardar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jbGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbGuardarActionPerformed(evt);
            }
        });

        jbActualizar.setBackground(new java.awt.Color(235, 42, 83));
        jbActualizar.setFont(new java.awt.Font("Times New Roman", 0, 20)); // NOI18N
        jbActualizar.setForeground(new java.awt.Color(255, 255, 255));
        jbActualizar.setText("Actualizar");
        jbActualizar.setBorder(null);
        jbActualizar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jbActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbActualizarActionPerformed(evt);
            }
        });

        jbLimpiar.setBackground(new java.awt.Color(235, 42, 83));
        jbLimpiar.setFont(new java.awt.Font("Times New Roman", 0, 20)); // NOI18N
        jbLimpiar.setForeground(new java.awt.Color(255, 255, 255));
        jbLimpiar.setText("Limpiar");
        jbLimpiar.setBorder(null);
        jbLimpiar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jbLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbLimpiarActionPerformed(evt);
            }
        });

        jbSalir.setBackground(new java.awt.Color(235, 42, 83));
        jbSalir.setFont(new java.awt.Font("Times New Roman", 0, 20)); // NOI18N
        jbSalir.setForeground(new java.awt.Color(255, 255, 255));
        jbSalir.setText("Salir");
        jbSalir.setBorder(null);
        jbSalir.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jbSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalirActionPerformed(evt);
            }
        });

        jcbSala.setBackground(new java.awt.Color(255, 255, 255));
        jcbSala.setFont(new java.awt.Font("Times New Roman", 0, 22)); // NOI18N
        jcbSala.setForeground(new java.awt.Color(0, 0, 0));
        jcbSala.setMaximumRowCount(3);
        jcbSala.setBorder(null);
        jcbSala.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbSalaActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Times New Roman", 0, 30)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Fila:");

        jsFila.setFont(new java.awt.Font("Times New Roman", 0, 22)); // NOI18N

        jLabel9.setFont(new java.awt.Font("Times New Roman", 0, 30)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Columna:");

        jsColumna.setFont(new java.awt.Font("Times New Roman", 0, 22)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 30)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Estado:");

        jcbEstado.setBackground(new java.awt.Color(24, 24, 24));
        jcbEstado.setFont(new java.awt.Font("Times New Roman", 0, 22)); // NOI18N
        jcbEstado.setForeground(new java.awt.Color(255, 255, 255));
        jcbEstado.setSelected(true);
        jcbEstado.setBorder(null);

        jtButaca = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int colIndex) {
                return false;
            }
        };
        jtButaca.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jtButaca.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtButacaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtButaca);

        javax.swing.GroupLayout jpContenedorLayout = new javax.swing.GroupLayout(jpContenedor);
        jpContenedor.setLayout(jpContenedorLayout);
        jpContenedorLayout.setHorizontalGroup(
            jpContenedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpContenedorLayout.createSequentialGroup()
                .addGroup(jpContenedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpContenedorLayout.createSequentialGroup()
                        .addGap(397, 397, 397)
                        .addComponent(jLabel3))
                    .addGroup(jpContenedorLayout.createSequentialGroup()
                        .addGap(332, 332, 332)
                        .addComponent(jcbSala, javax.swing.GroupLayout.PREFERRED_SIZE, 355, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jpContenedorLayout.createSequentialGroup()
                        .addGap(151, 151, 151)
                        .addComponent(jLabel7)
                        .addGap(18, 18, 18)
                        .addComponent(jsFila, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(129, 129, 129)
                        .addComponent(jLabel9)
                        .addGap(27, 27, 27)
                        .addComponent(jsColumna, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(133, 133, 133)
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(jcbEstado))
                    .addGroup(jpContenedorLayout.createSequentialGroup()
                        .addGap(75, 75, 75)
                        .addGroup(jpContenedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 850, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jpContenedorLayout.createSequentialGroup()
                                .addComponent(jbGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(94, 94, 94)
                                .addComponent(jbActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(124, 124, 124)
                                .addComponent(jbLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(120, 120, 120)
                                .addComponent(jbSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(75, 75, 75))
        );
        jpContenedorLayout.setVerticalGroup(
            jpContenedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpContenedorLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(jcbSala, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addGroup(jpContenedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpContenedorLayout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(jLabel7))
                    .addComponent(jsFila, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jpContenedorLayout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(jLabel9))
                    .addComponent(jsColumna, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jpContenedorLayout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(jLabel4))
                    .addGroup(jpContenedorLayout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jcbEstado)))
                .addGap(60, 60, 60)
                .addGroup(jpContenedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jbGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jpBackgroud.add(jpContenedor, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1000, 530));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagen/Logo.png"))); // NOI18N
        jpBackgroud.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(325, 172, -1, -1));

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 40)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("BOLETERIA");
        jpBackgroud.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(473, 221, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jpBackgroud, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jpBackgroud, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jcbSalaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbSalaActionPerformed
        borrarFilas();
        cargarTabla();
        jsFila.setValue(0);
        jsColumna.setValue(0);
        jcbEstado.setSelected(true);
    }//GEN-LAST:event_jcbSalaActionPerformed

    private void jbActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbActualizarActionPerformed
        int filaElegida = jtButaca.getSelectedRow();

        if (filaElegida != -1) {
            int fila = Integer.parseInt(jtButaca.getValueAt(filaElegida, 0).toString());
            int columna = Integer.parseInt(jtButaca.getValueAt(filaElegida, 1).toString());
            sala = (Sala) jcbSala.getSelectedItem();

            Butaca butaca1 = bd.BuscarButacaXFilaXColumnaXSala(fila, columna, sala.getIdSala());

            int fila1 = (int) jsFila.getValue();
            int columna1 = (int) jsColumna.getValue();
            boolean estado = jcbEstado.isSelected();

            Butaca butaca = new Butaca(butaca1.getIdButaca(), sala, fila1, columna1, estado);
            bd.actualizarButaca(butaca);
            jcbEstado.setEnabled(true);
            borrarFilas();
            cargarTabla();
        } else {
            JOptionPane.showMessageDialog(this, "Seleccione un registro");
        }
    }//GEN-LAST:event_jbActualizarActionPerformed

    private void jbGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbGuardarActionPerformed
        sala = (Sala) jcbSala.getSelectedItem();
        int fila = (int) jsFila.getValue();
        int columna = (int) jsColumna.getValue();
        boolean estado = jcbEstado.isSelected();

        Butaca butaca = new Butaca(sala, fila, columna, estado);

        bd.guardarButaca(butaca);
        borrarFilas();
        cargarTabla();
    }//GEN-LAST:event_jbGuardarActionPerformed

    private void jbLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbLimpiarActionPerformed
        limpiarCampos();
        cambiarPropiedadesElementosLimpiar();
    }//GEN-LAST:event_jbLimpiarActionPerformed

    private void jbSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalirActionPerformed
        jpContenedor.setVisible(false);
    }//GEN-LAST:event_jbSalirActionPerformed

    private void jtButacaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtButacaMouseClicked
        cargarDatosAlActualizar();
        cambiarPropiedadesElementosActualizar();
    }//GEN-LAST:event_jtButacaMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbActualizar;
    private javax.swing.JButton jbGuardar;
    private javax.swing.JButton jbLimpiar;
    private javax.swing.JButton jbSalir;
    private javax.swing.JCheckBox jcbEstado;
    private javax.swing.JComboBox<Sala> jcbSala;
    private javax.swing.JPanel jpBackgroud;
    private javax.swing.JPanel jpContenedor;
    private javax.swing.JSpinner jsColumna;
    private javax.swing.JSpinner jsFila;
    private javax.swing.JTable jtButaca;
    // End of variables declaration//GEN-END:variables
}
